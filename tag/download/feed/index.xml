<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	
	xmlns:georss="http://www.georss.org/georss"
	xmlns:geo="http://www.w3.org/2003/01/geo/wgs84_pos#"
	>

<channel>
	<title>download – Ability Rush</title>
	<atom:link href="/tag/download/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description>Learn &#38; Improve</description>
	<lastBuildDate>Sat, 08 Apr 2023 14:28:20 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=6.5.4</generator>

<image>
	<url>/wp-content/uploads/2021/10/cropped-android-chrome-512x512-1-32x32.png</url>
	<title>download – Ability Rush</title>
	<link>/</link>
	<width>32</width>
	<height>32</height>
</image> 
	<item>
		<title>How to serve files in an HTTP server in Golang</title>
		<link>/how-to-serve-files-in-an-http-server-in-golang/</link>
					<comments>/how-to-serve-files-in-an-http-server-in-golang/#respond</comments>
		
		<dc:creator><![CDATA[Akshay Khairmode]]></dc:creator>
		<pubDate>Fri, 20 Jan 2023 17:14:17 +0000</pubDate>
				<category><![CDATA[Golang]]></category>
		<category><![CDATA[Technology]]></category>
		<category><![CDATA[download]]></category>
		<category><![CDATA[file]]></category>
		<category><![CDATA[go]]></category>
		<category><![CDATA[golang]]></category>
		<category><![CDATA[serve]]></category>
		<guid isPermaLink="false">/?p=1575</guid>

					<description><![CDATA[<p>Hey friends, In this post we will see how we can serve a file on our HTTP server which HTTP clients can download easily.</p>
<p>The post <a href="/how-to-serve-files-in-an-http-server-in-golang/">How to serve files in an HTTP server in Golang</a> first appeared on <a href="/">Ability Rush</a>.</p>]]></description>
		
					<wfw:commentRss>/how-to-serve-files-in-an-http-server-in-golang/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
		<post-id xmlns="com-wordpress:feed-additions:1">1575</post-id>	</item>
		<item>
		<title>How to Download a file in Golang with a Single Connection</title>
		<link>/download-file-in-golang-single-connection/</link>
					<comments>/download-file-in-golang-single-connection/#respond</comments>
		
		<dc:creator><![CDATA[Akshay Khairmode]]></dc:creator>
		<pubDate>Tue, 26 Oct 2021 18:22:28 +0000</pubDate>
				<category><![CDATA[Golang]]></category>
		<category><![CDATA[Technology]]></category>
		<category><![CDATA[download]]></category>
		<category><![CDATA[download file]]></category>
		<category><![CDATA[go]]></category>
		<category><![CDATA[golang]]></category>
		<category><![CDATA[http]]></category>
		<guid isPermaLink="false">/?p=529</guid>

					<description><![CDATA[<p>Hey folks, In this post we will see how we can download file in golang. We will see 2 functions, one inefficient way and another which will be efficient.</p>
<p>The post <a href="/download-file-in-golang-single-connection/">How to Download a file in Golang with a Single Connection</a> first appeared on <a href="/">Ability Rush</a>.</p>]]></description>
		
					<wfw:commentRss>/download-file-in-golang-single-connection/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
		<post-id xmlns="com-wordpress:feed-additions:1">529</post-id>	</item>
		<item>
		<title>Download file concurrently in Golang-Part 3(Progress Bar)</title>
		<link>/download-file-concurrently-with-golang-part-3progress-bar/</link>
					<comments>/download-file-concurrently-with-golang-part-3progress-bar/#respond</comments>
		
		<dc:creator><![CDATA[Akshay Khairmode]]></dc:creator>
		<pubDate>Sat, 11 Sep 2021 15:16:49 +0000</pubDate>
				<category><![CDATA[Golang]]></category>
		<category><![CDATA[Technology]]></category>
		<category><![CDATA[concurrency]]></category>
		<category><![CDATA[download]]></category>
		<category><![CDATA[golang]]></category>
		<guid isPermaLink="false">/?p=111</guid>

					<description><![CDATA[<p>In part 2 we updated the code to be more memory efficient using files and io.Copy. Now we will try to implement a progress bar in the tool. This progress bar will show progress for each of the connections. We will also handle the user kill commands like ctrl+c. Let&#8217;s start. Full code available here Our [&#8230;]</p>
<p>The post <a href="/download-file-concurrently-with-golang-part-3progress-bar/">Download file concurrently in Golang-Part 3(Progress Bar)</a> first appeared on <a href="/">Ability Rush</a>.</p>]]></description>
		
					<wfw:commentRss>/download-file-concurrently-with-golang-part-3progress-bar/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
		<post-id xmlns="com-wordpress:feed-additions:1">111</post-id>	</item>
		<item>
		<title>Download file concurrently in Golang</title>
		<link>/download-file-concurrently-in-golang-part-1/</link>
					<comments>/download-file-concurrently-in-golang-part-1/#respond</comments>
		
		<dc:creator><![CDATA[Akshay Khairmode]]></dc:creator>
		<pubDate>Sat, 04 Sep 2021 20:02:03 +0000</pubDate>
				<category><![CDATA[Golang]]></category>
		<category><![CDATA[Technology]]></category>
		<category><![CDATA[concurrency]]></category>
		<category><![CDATA[download]]></category>
		<category><![CDATA[file]]></category>
		<category><![CDATA[go]]></category>
		<guid isPermaLink="false">/?p=40</guid>

					<description><![CDATA[<p>How to download a file over HTTP with multiple connections in Golang. We are making a small tool which will download the file given the number of connections.</p>
<p>The post <a href="/download-file-concurrently-in-golang-part-1/">Download file concurrently in Golang</a> first appeared on <a href="/">Ability Rush</a>.</p>]]></description>
		
					<wfw:commentRss>/download-file-concurrently-in-golang-part-1/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
		<post-id xmlns="com-wordpress:feed-additions:1">40</post-id>	</item>
	</channel>
</rss>
